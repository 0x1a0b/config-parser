// Code generated by go generate; DO NOT EDIT.
package tests

import (
	"testing"

	"github.com/haproxytech/config-parser/parsers"
)


func TestLogNormal0(t *testing.T) {
	err := ProcessLine("log global", &parsers.Log{})
	if err != nil {
		t.Errorf(err.Error())
	}
}
func TestLogNormal1(t *testing.T) {
	err := ProcessLine("log stdout format short daemon          # send log to systemd", &parsers.Log{})
	if err != nil {
		t.Errorf(err.Error())
	}
}
func TestLogNormal2(t *testing.T) {
	err := ProcessLine("log stdout format raw daemon            # send everything to stdout", &parsers.Log{})
	if err != nil {
		t.Errorf(err.Error())
	}
}
func TestLogNormal3(t *testing.T) {
	err := ProcessLine("log stderr format raw daemon notice     # send important events to stderr", &parsers.Log{})
	if err != nil {
		t.Errorf(err.Error())
	}
}
func TestLogNormal4(t *testing.T) {
	err := ProcessLine("log 127.0.0.1:514 local0 notice         # only send important events", &parsers.Log{})
	if err != nil {
		t.Errorf(err.Error())
	}
}
func TestLogNormal5(t *testing.T) {
	err := ProcessLine("log 127.0.0.1:514 local0 notice notice  # same but limit output level", &parsers.Log{})
	if err != nil {
		t.Errorf(err.Error())
	}
}
func TestLogFail0(t *testing.T) {
	err := ProcessLine("log", &parsers.Log{})
	if err == nil {
		t.Errorf("no data")
	}
}
func TestLogFail1(t *testing.T) {
	err := ProcessLine("---", &parsers.Log{})
	if err == nil {
		t.Errorf("no data")
	}
}
func TestLogFail2(t *testing.T) {
	err := ProcessLine("--- ---", &parsers.Log{})
	if err == nil {
		t.Errorf("no data")
	}
}
