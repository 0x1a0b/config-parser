// Code generated by go generate; DO NOT EDIT.
package tests

import (
	"testing"

	"github.com/haproxytech/config-parser/parsers"
)


func TestStickTableNormal0(t *testing.T) {
	err := ProcessLine("stick-table type ip size 1m expire 5m store gpc0,conn_rate(30s)", &parsers.StickTable{})
	if err != nil {
		t.Errorf(err.Error())
	}
}
func TestStickTableNormal1(t *testing.T) {
	err := ProcessLine("stick-table type ip size 1m expire 5m store gpc0,conn_rate(30s) #comment", &parsers.StickTable{})
	if err != nil {
		t.Errorf(err.Error())
	}
}
func TestStickTableNormal2(t *testing.T) {
	err := ProcessLine("stick-table type string len 1000 size 1m expire 5m store gpc0,conn_rate(30s)", &parsers.StickTable{})
	if err != nil {
		t.Errorf(err.Error())
	}
}
func TestStickTableNormal3(t *testing.T) {
	err := ProcessLine("stick-table type string len 1000 size 1m expire 5m nopurge peers aaaaa store gpc0,conn_rate(30s)", &parsers.StickTable{})
	if err != nil {
		t.Errorf(err.Error())
	}
}
func TestStickTableFail0(t *testing.T) {
	err := ProcessLine("stick-table type string len 1000 size 1m expire 5m something peers aaaaa store gpc0,conn_rate(30s)", &parsers.StickTable{})
	if err == nil {
		t.Errorf("no data")
	}
}
func TestStickTableFail1(t *testing.T) {
	err := ProcessLine("stick-table type", &parsers.StickTable{})
	if err == nil {
		t.Errorf("no data")
	}
}
func TestStickTableFail2(t *testing.T) {
	err := ProcessLine("stick-table", &parsers.StickTable{})
	if err == nil {
		t.Errorf("no data")
	}
}
func TestStickTableFail3(t *testing.T) {
	err := ProcessLine("---", &parsers.StickTable{})
	if err == nil {
		t.Errorf("no data")
	}
}
func TestStickTableFail4(t *testing.T) {
	err := ProcessLine("--- ---", &parsers.StickTable{})
	if err == nil {
		t.Errorf("no data")
	}
}
